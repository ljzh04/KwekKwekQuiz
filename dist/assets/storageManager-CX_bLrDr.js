import{x as l,q as u,I as i,E as f}from"./dom-BKcPZjMx.js";import{c as q,a as n,v as w,b as p,s as d,d as v}from"./utils-DJpVKuP1.js";import"./state-DFIgnp9Y.js";const b="savedQuizzes";function c(){const e=localStorage.getItem(b);return e?JSON.parse(e):{}}function m(e){localStorage.setItem(b,JSON.stringify(e))}function h(){if(!l)return;const e=c();l.innerHTML='<option value="" disabled selected>Select a saved quiz</option>',Object.keys(e).forEach(t=>{const o=document.createElement("option");o.value=t,o.textContent=t,l.appendChild(o)})}function I(){if(q(),!u||!i)return;let e;try{e=JSON.parse(u.value)}catch{n("Invalid JSON format for quiz data. Please correct and try again.");return}if(!w(e)){n("Invalid quiz data structure. Please check your JSON.");return}const t=i.value.trim();if(!t){n("Quiz name is required to save.");return}const o=p(t),a=c();if(!(a[o]&&!i.dataset.editingExisting&&!confirm(`A quiz named "${o}" already exists. Do you want to overwrite it?`))){delete i.dataset.editingExisting;try{a[o]=e,m(a),h(),l.value=o,d(`Quiz "${o}" saved successfully.`)}catch(r){n("Failed to save quiz. Storage might be full or an unexpected error occurred."),console.error("Save quiz error:",r)}}}function N(){if(q(),!l)return;const e=l.value;if(!e){n("Please select a saved quiz to delete.");return}if(confirm(`Are you sure you want to delete the quiz "${p(e)}"?`))try{const t=c();t[e]&&(delete t[e],m(t),h(),u&&(u.value=""),i&&(i.value=""),d(`Quiz "${p(e)}" deleted.`))}catch(t){n("Failed to delete quiz."),console.error("Delete quiz error:",t)}}function E(){if(q(),!l||!u||!i)return;const e=l.value;if(!e)return;const t=c();t[e]&&(u.value=JSON.stringify(t[e],null,2),i.value=p(e),i.dataset.editingExisting="true")}function j(){const e=c();if(Object.keys(e).length===0){v("No quizzes saved to export.");return}try{const t=JSON.stringify(e,null,2),o=new Blob([t],{type:"application/json"}),a=URL.createObjectURL(o),r=document.createElement("a");r.href=a,r.download="kwek-kwek-quizzes_export.json",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(a),d("All quizzes exported successfully!")}catch(t){n("Failed to export quizzes."),console.error("Export error:",t)}}function A(e){const t=e.target.files[0];if(!t){v("No file selected for import.");return}if(t.type!=="application/json"){n("Invalid file type. Please select a JSON file.");return}const o=new FileReader;o.onload=a=>{try{const r=JSON.parse(a.target.result);if(typeof r!="object"||Array.isArray(r)||r===null)throw new Error("Imported JSON is not in the expected format (object of quizzes).");let g=0,S=0;const y=c();let z=[];for(const s in r)if(Object.prototype.hasOwnProperty.call(r,s)){if(!w(r[s])){console.warn(`Skipping import of "${s}" due to invalid structure.`);continue}y[s]&&z.push(s),y[s]=r[s],z.includes(s)?S++:g++}if(z.length>0&&!confirm(`The following quizzes already exist and will be overwritten: ${z.join(", ")}. Continue?`)){v("Import cancelled by user."),f.value="";return}m(y),h(),d(`${g} new quizzes imported, ${S} quizzes overwritten.`),f.value=""}catch(r){n(`Failed to import quizzes: ${r.message}`),console.error("Import error:",r),f.value=""}},o.onerror=()=>{n("Error reading the selected file."),f.value=""},o.readAsText(t)}function k(){if(Object.keys(c()).length===0){v("No quizzes to clear.");return}if(confirm("Are you sure you want to delete ALL saved quizzes? This action cannot be undone!"))try{m({}),h(),u&&(u.value=""),i&&(i.value=""),d("All saved quizzes have been cleared.")}catch(e){n("Failed to clear all quizzes."),console.error("Clear all quizzes error:",e)}}export{k as handleClearAllQuizzes,N as handleDeleteQuiz,j as handleExportQuizzes,A as handleImportQuizzes,I as handleSaveQuiz,E as handleSavedQuizSelectChange,h as loadSavedQuizzesToDropdown};
